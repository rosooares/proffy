{"version":3,"sources":["emitter-polyfill.ts"],"names":["RCTEventEmitter","RCTDeviceEventEmitter","SyntheticPlatformEmitter","_emitter","sharedSubscriber","eventName","props","emit"],"mappings":"gIAIA,MAAOA,CAAAA,eAAP,KAA4B,gEAA5B,CAEA,MAAOC,CAAAA,qBAAP,KAAkC,oFAAlC,C,GAMMC,CAAAA,wB,oGACJC,Q,CAAW,GAAIH,CAAAA,eAAJ,CAAoBC,qBAAqB,CAACG,gBAA1C,C,yEAENC,S,CAAmBC,K,CAAkB,CACxC,KAAKH,QAAL,CAAcI,IAAd,CAAmBF,SAAnB,CAA8BC,KAA9B,EACD,C,wCAGH,cAAe,IAAIJ,CAAAA,wBAAJ,EAAf","sourcesContent":["// Copyright 2018-present 650 Industries. All rights reserved.\n// Polyfill the @unimodules/react-native-adapter used for Expo web.\n\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTEventEmitter from 'react-native-web/dist/vendor/react-native/emitter/EventEmitter';\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTDeviceEventEmitter from 'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"]}